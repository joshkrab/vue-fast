https://www.youtube.com/watch?v=eEF6Szpda9g&t=317s

01 Installation -----------------------------------------------------------------------

	- sudo npm install -g @vue/cli - globally
	- vue create . - in project folder - "." or name
		manually, turn off linter, vue 2, dedicated, no for future

	Vuetify - material design, like bootstrap for vue:
	- vue add vuetify - default option

	- npm run serve - test run
	- click on link: http://192.168.0.105:8080/ in terminal

	- clean project folder: remove 'assets' folder, remove 'hello world' file

	- I added in jsconfig.json:   "vueCompilerOptions": {
																		"target": 2.7
																	}
		Because I had an error.

02 App Bar ----------------------------------------------------------------------------

	- Go to https://vuetifyjs.com/en/components/app-bars/#dense
	- Open code of bars in codepen (press codepen button above component) and copy code in left tab
	- Insert code in template block and edit it.

	- markup nav panel and move it to separate component Navbar.vue
	- move panels code there
	- in main file import new component and add it in components field

03 Pages - npm i vue-router - 6:30 -----------------------------------------------------------

	- npm config set legacy-peer-deps true - because some old versions...
	- npm i vue-router@3.4.9
	- Create folder "pages"
	- Create two files there: MainPage.vue, PhotosPage.vue

	- Create file router.js in src, edit it
	- Import router in main.js
	- Add router in main file App.vue like <router-view/>

04 Gallery - 10:15 --------------------------------------------------------------------

	- Create photo folder with component for one photo
	- Define data field in PhotosPage and import there Photo component
	- Build array of photos with directive <v-for>
	- Send props in component, v-bind:photo - "photo" is the name of the props, or just :photo without v-bind

05 Async request for photo data, AXIOS - 13:34 ----------------------------------------

	- npm install axios
	- add mounted() method of component life cycle in PhotosPage.vue

	- in main.js:
	- remove line: Vue.config.productionTip = false
	- import axios from 'axios';
	- Record axios in prototype for use it in every component: Vue.prototype.axios = axios;
	- Then we can use this.axios in component PhotosPage.vue in mounted() method

	- PhotosPage.vue:
	- this.axios - get data from https://jsonplaceholder.typicode.com/photos?_limit=10, get 10 photos
	- move this.axios in separate field methods

06 Design of the Photo.vue component - 15:18 ------------------------------------------

	- In PhotosPage.vue:
	- add <v-row>

	- In Photo.vue:
	- Add <v-col cols="4"> - 4 of 12 columns
	- Add <v-card>, <v-title>...

07 PhotoForm.vue - 16:40 --------------------------------------------------------------

	- Create component in "photo" folder
	- Import it in PhotosPage
	- Add component in template

	- Instead of the value and onChange (like in react), in vue:
	- In data field add two variables
	- add v-model directive in inputs with appropriate variables
	- Now, when we change value in input will change values in these variables

	- Add @click function on button
	- Create FileReader(), new photo object, end emit this object in event to parent component
	this.$emit('addPhoto', photo)

	- In PhotosPage add addPhoto function for push new photo object
	- Send this function in PhotoForm component (like @click) with event name @addPhoto="addPhoto"

08 Photo Popup - 22:15 ----------------------------------------------------------------

	- Create file PhotoDialog.vue
	- Go to vuetify for dialog  <v-dialog>
	- Add there card and props
	- Import this component in PhotosPage

	- Add @click event on every photo in Photo.vue
	- Emit event there "openPhoto"
	- Create listener in PhotosPage
	- Add :photo and :dialog-visible props to PhotoDialog

	- In PhotoDialog add watch field for watching the value
	- Change some props, because we had an error about mutable props
	- 'v-model' in props -> 'value' in component props

09 Watch - 28:00 -----------------------------------------------------------------------

	- Use variables like methods...

10 Computes - 30:15 --------------------------------------------------------------------

	- Run when changes some variables inside computed function

11 v-if/v-else - 31:20 ------------------------------------------------------------------

	- 

12 v-show - 32:00 -----------------------------------------------------------------------

	- Stays in the DOM

13 VUEX - 32:30 --------------------------------------------------------------------------

	- Create store folder and index.js there
	- Create photoModule.js
	- Every module has: state: {}, mutations: {}, getters: {}, actions: {},

	- in main.js add store
	- in PhotosPage component add dispatch in mounted()
	- set getter in v-for

	- Also set in mutations methods showDialog/hideDialog

14 Vuex mapGetters, mapActions - 41:27 -----------------------------------------------------------------

	- In PhotoPage.vue: import { mapActions } from 'vuex';
	- In methods: ...mapActions(['fetchPhotos']),
	- In mounted: this.fetchPhotos()

	- In Photo.vue: import { mapMutations } from 'vuex';
	- In methods: ...mapMutations(['setCurrentPhoto', 'showDialog', 'hideDialog']),
	- Inside methods: this.setCurrentPhoto(this.photo);


